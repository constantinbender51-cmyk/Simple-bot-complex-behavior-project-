//decision engine 
import { StrategyEngine } from './strategyEngine.js';
import { loadContext } from './context.js';
import { log } from './logger.js'; // 📝 Import the logger

export async function decidePlan({
  markPrice,
  position,
  balance,
  fills,
  ohlc,
  intervalMinutes,
  callsLeft
}) {
  // 📝 LOGGING: Show the exact input parameters that the function receives.
  log.info('🔍 [decidePlan] Input parameters:', {
    markPrice,
    position,
    balance,
    ohlcCount: ohlc.length,
    callsLeft
  });

  const context = await loadContext();
  // 📝 LOGGING: Show the context that the decision engine will use.
  log.info('📊 [decidePlan] Context loaded for decision:', JSON.stringify(context, null, 2));

  const engine = new StrategyEngine();
  const plan = await engine.generatePlan({
    markPrice,
    position,
    balance,
    fills,
    ohlc,
    intervalMinutes,
    context,
    apiCallLimitPerDay: callsLeft // Pass callsLeft to the engine
  });
  
  // 📝 LOGGING: Show the final plan object that the StrategyEngine generated.
  log.info('📝 [decidePlan] Plan generated by StrategyEngine:', JSON.stringify(plan, null, 2));

  return plan;
}
